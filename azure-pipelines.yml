trigger:
  - '*'

pool:
  vmImage: ubuntu-latest

stages:
- stage: AndroidStage
  dependsOn: []
  displayName: Android
  jobs:

  - job: AndroidJob
    displayName: Android (Flutter Build)
    steps:

    # replace "key.properties" with your secure file name
    - task: DownloadSecureFile@1
      name: keyprop
      displayName: Download key properties file
      inputs:
        secureFile: 'key.properties'

    # replace "upload-keystore.jks" with your secure file name
    - task: DownloadSecureFile@1
      name: key
      displayName: Download signing key
      inputs:
        secureFile: 'upload-keystore.jks'

    - task: JavaToolInstaller@0
      inputs:
        versionSpec: '11'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    # adjust paths and file names here
    - task: Bash@3
      displayName: Copy config files
      inputs:
        targetType: 'inline'
        script: |
          cp $(keyprop.secureFilePath) $(Build.SourcesDirectory)/android/key.properties
          cp $(key.secureFilePath) $(Build.SourcesDirectory)/android/app/upload-keystore.jks

          echo "key.properties copied to $(Build.SourcesDirectory)/android/key.properties"
          echo "upload-keystore.jks copied to $(Build.SourcesDirectory)/android/app/upload-keystore.jks"

    - task: FlutterInstall@0
      displayName: "Install Flutter SDK"
      inputs:
        mode: 'auto'
        channel: 'stable'
        version: 'latest'

    - task: FlutterBuild@0
      displayName: "Build application"
      inputs:
        target: 'apk'
        projectDirectory: '$(Build.SourcesDirectory)'

    - task: FlutterTest@0
      displayName: "Run unit tests"
      inputs:
        generateCodeCoverageReport: true
        projectDirectory: '$(Build.SourcesDirectory)'

    - task: CopyFiles@2
      displayName: "Copy app to staging directory"
      inputs:
        ssourceFolder: '$(Agent.BuildDirectory)'
        contents: '**/*.apk'
        targetFolder: '$(Build.artifactStagingDirectory)'
        flattenFolders: true
        OverWrite: true
        
    - task: PublishBuildArtifacts@1
      displayName: "Publish APK file"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'APK Artifact'
        publishLocation: 'Container'
        